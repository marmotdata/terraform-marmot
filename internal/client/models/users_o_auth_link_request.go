// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// UsersOAuthLinkRequest users o auth link request
//
// swagger:model users.OAuthLinkRequest
type UsersOAuthLinkRequest struct {

	// provider
	// Required: true
	Provider *string `json:"provider"`

	// provider user id
	// Required: true
	ProviderUserID *string `json:"provider_user_id"`

	// user id
	// Required: true
	UserID *string `json:"user_id"`

	// user info
	// Required: true
	UserInfo interface{} `json:"user_info"`
}

// Validate validates this users o auth link request
func (m *UsersOAuthLinkRequest) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateProvider(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateProviderUserID(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateUserID(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateUserInfo(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *UsersOAuthLinkRequest) validateProvider(formats strfmt.Registry) error {

	if err := validate.Required("provider", "body", m.Provider); err != nil {
		return err
	}

	return nil
}

func (m *UsersOAuthLinkRequest) validateProviderUserID(formats strfmt.Registry) error {

	if err := validate.Required("provider_user_id", "body", m.ProviderUserID); err != nil {
		return err
	}

	return nil
}

func (m *UsersOAuthLinkRequest) validateUserID(formats strfmt.Registry) error {

	if err := validate.Required("user_id", "body", m.UserID); err != nil {
		return err
	}

	return nil
}

func (m *UsersOAuthLinkRequest) validateUserInfo(formats strfmt.Registry) error {

	if m.UserInfo == nil {
		return errors.Required("user_info", "body", nil)
	}

	return nil
}

// ContextValidate validates this users o auth link request based on context it is used
func (m *UsersOAuthLinkRequest) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *UsersOAuthLinkRequest) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *UsersOAuthLinkRequest) UnmarshalBinary(b []byte) error {
	var res UsersOAuthLinkRequest
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
