// Code generated by go-swagger; DO NOT EDIT.

package auth

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/marmotdata/terraform-provider-marmot/internal/client/models"
)

// GetAuthOktaCallbackReader is a Reader for the GetAuthOktaCallback structure.
type GetAuthOktaCallbackReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetAuthOktaCallbackReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 307:
		result := NewGetAuthOktaCallbackTemporaryRedirect()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 400:
		result := NewGetAuthOktaCallbackBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetAuthOktaCallbackInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /auth/okta/callback] GetAuthOktaCallback", response, response.Code())
	}
}

// NewGetAuthOktaCallbackTemporaryRedirect creates a GetAuthOktaCallbackTemporaryRedirect with default headers values
func NewGetAuthOktaCallbackTemporaryRedirect() *GetAuthOktaCallbackTemporaryRedirect {
	return &GetAuthOktaCallbackTemporaryRedirect{}
}

/*
GetAuthOktaCallbackTemporaryRedirect describes a response with status code 307, with default header values.

Temporary Redirect
*/
type GetAuthOktaCallbackTemporaryRedirect struct {
	Payload string
}

// IsSuccess returns true when this get auth okta callback temporary redirect response has a 2xx status code
func (o *GetAuthOktaCallbackTemporaryRedirect) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get auth okta callback temporary redirect response has a 3xx status code
func (o *GetAuthOktaCallbackTemporaryRedirect) IsRedirect() bool {
	return true
}

// IsClientError returns true when this get auth okta callback temporary redirect response has a 4xx status code
func (o *GetAuthOktaCallbackTemporaryRedirect) IsClientError() bool {
	return false
}

// IsServerError returns true when this get auth okta callback temporary redirect response has a 5xx status code
func (o *GetAuthOktaCallbackTemporaryRedirect) IsServerError() bool {
	return false
}

// IsCode returns true when this get auth okta callback temporary redirect response a status code equal to that given
func (o *GetAuthOktaCallbackTemporaryRedirect) IsCode(code int) bool {
	return code == 307
}

// Code gets the status code for the get auth okta callback temporary redirect response
func (o *GetAuthOktaCallbackTemporaryRedirect) Code() int {
	return 307
}

func (o *GetAuthOktaCallbackTemporaryRedirect) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /auth/okta/callback][%d] getAuthOktaCallbackTemporaryRedirect %s", 307, payload)
}

func (o *GetAuthOktaCallbackTemporaryRedirect) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /auth/okta/callback][%d] getAuthOktaCallbackTemporaryRedirect %s", 307, payload)
}

func (o *GetAuthOktaCallbackTemporaryRedirect) GetPayload() string {
	return o.Payload
}

func (o *GetAuthOktaCallbackTemporaryRedirect) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAuthOktaCallbackBadRequest creates a GetAuthOktaCallbackBadRequest with default headers values
func NewGetAuthOktaCallbackBadRequest() *GetAuthOktaCallbackBadRequest {
	return &GetAuthOktaCallbackBadRequest{}
}

/*
GetAuthOktaCallbackBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type GetAuthOktaCallbackBadRequest struct {
	Payload *models.CommonErrorResponse
}

// IsSuccess returns true when this get auth okta callback bad request response has a 2xx status code
func (o *GetAuthOktaCallbackBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get auth okta callback bad request response has a 3xx status code
func (o *GetAuthOktaCallbackBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get auth okta callback bad request response has a 4xx status code
func (o *GetAuthOktaCallbackBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get auth okta callback bad request response has a 5xx status code
func (o *GetAuthOktaCallbackBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get auth okta callback bad request response a status code equal to that given
func (o *GetAuthOktaCallbackBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get auth okta callback bad request response
func (o *GetAuthOktaCallbackBadRequest) Code() int {
	return 400
}

func (o *GetAuthOktaCallbackBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /auth/okta/callback][%d] getAuthOktaCallbackBadRequest %s", 400, payload)
}

func (o *GetAuthOktaCallbackBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /auth/okta/callback][%d] getAuthOktaCallbackBadRequest %s", 400, payload)
}

func (o *GetAuthOktaCallbackBadRequest) GetPayload() *models.CommonErrorResponse {
	return o.Payload
}

func (o *GetAuthOktaCallbackBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.CommonErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAuthOktaCallbackInternalServerError creates a GetAuthOktaCallbackInternalServerError with default headers values
func NewGetAuthOktaCallbackInternalServerError() *GetAuthOktaCallbackInternalServerError {
	return &GetAuthOktaCallbackInternalServerError{}
}

/*
GetAuthOktaCallbackInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type GetAuthOktaCallbackInternalServerError struct {
	Payload *models.CommonErrorResponse
}

// IsSuccess returns true when this get auth okta callback internal server error response has a 2xx status code
func (o *GetAuthOktaCallbackInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get auth okta callback internal server error response has a 3xx status code
func (o *GetAuthOktaCallbackInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get auth okta callback internal server error response has a 4xx status code
func (o *GetAuthOktaCallbackInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get auth okta callback internal server error response has a 5xx status code
func (o *GetAuthOktaCallbackInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get auth okta callback internal server error response a status code equal to that given
func (o *GetAuthOktaCallbackInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the get auth okta callback internal server error response
func (o *GetAuthOktaCallbackInternalServerError) Code() int {
	return 500
}

func (o *GetAuthOktaCallbackInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /auth/okta/callback][%d] getAuthOktaCallbackInternalServerError %s", 500, payload)
}

func (o *GetAuthOktaCallbackInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /auth/okta/callback][%d] getAuthOktaCallbackInternalServerError %s", 500, payload)
}

func (o *GetAuthOktaCallbackInternalServerError) GetPayload() *models.CommonErrorResponse {
	return o.Payload
}

func (o *GetAuthOktaCallbackInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.CommonErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
