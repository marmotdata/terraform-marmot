// Code generated by go-swagger; DO NOT EDIT.

package users

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/marmotdata/terraform-provider-marmot/internal/client/models"
)

// PostUsersLoginReader is a Reader for the PostUsersLogin structure.
type PostUsersLoginReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostUsersLoginReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPostUsersLoginOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPostUsersLoginBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewPostUsersLoginUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /users/login] PostUsersLogin", response, response.Code())
	}
}

// NewPostUsersLoginOK creates a PostUsersLoginOK with default headers values
func NewPostUsersLoginOK() *PostUsersLoginOK {
	return &PostUsersLoginOK{}
}

/*
PostUsersLoginOK describes a response with status code 200, with default header values.

OK
*/
type PostUsersLoginOK struct {
	Payload *models.UsersTokenResponse
}

// IsSuccess returns true when this post users login o k response has a 2xx status code
func (o *PostUsersLoginOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this post users login o k response has a 3xx status code
func (o *PostUsersLoginOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post users login o k response has a 4xx status code
func (o *PostUsersLoginOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this post users login o k response has a 5xx status code
func (o *PostUsersLoginOK) IsServerError() bool {
	return false
}

// IsCode returns true when this post users login o k response a status code equal to that given
func (o *PostUsersLoginOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the post users login o k response
func (o *PostUsersLoginOK) Code() int {
	return 200
}

func (o *PostUsersLoginOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /users/login][%d] postUsersLoginOK %s", 200, payload)
}

func (o *PostUsersLoginOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /users/login][%d] postUsersLoginOK %s", 200, payload)
}

func (o *PostUsersLoginOK) GetPayload() *models.UsersTokenResponse {
	return o.Payload
}

func (o *PostUsersLoginOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.UsersTokenResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostUsersLoginBadRequest creates a PostUsersLoginBadRequest with default headers values
func NewPostUsersLoginBadRequest() *PostUsersLoginBadRequest {
	return &PostUsersLoginBadRequest{}
}

/*
PostUsersLoginBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type PostUsersLoginBadRequest struct {
	Payload *models.CommonErrorResponse
}

// IsSuccess returns true when this post users login bad request response has a 2xx status code
func (o *PostUsersLoginBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post users login bad request response has a 3xx status code
func (o *PostUsersLoginBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post users login bad request response has a 4xx status code
func (o *PostUsersLoginBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this post users login bad request response has a 5xx status code
func (o *PostUsersLoginBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this post users login bad request response a status code equal to that given
func (o *PostUsersLoginBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the post users login bad request response
func (o *PostUsersLoginBadRequest) Code() int {
	return 400
}

func (o *PostUsersLoginBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /users/login][%d] postUsersLoginBadRequest %s", 400, payload)
}

func (o *PostUsersLoginBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /users/login][%d] postUsersLoginBadRequest %s", 400, payload)
}

func (o *PostUsersLoginBadRequest) GetPayload() *models.CommonErrorResponse {
	return o.Payload
}

func (o *PostUsersLoginBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.CommonErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostUsersLoginUnauthorized creates a PostUsersLoginUnauthorized with default headers values
func NewPostUsersLoginUnauthorized() *PostUsersLoginUnauthorized {
	return &PostUsersLoginUnauthorized{}
}

/*
PostUsersLoginUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type PostUsersLoginUnauthorized struct {
	Payload *models.CommonErrorResponse
}

// IsSuccess returns true when this post users login unauthorized response has a 2xx status code
func (o *PostUsersLoginUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post users login unauthorized response has a 3xx status code
func (o *PostUsersLoginUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post users login unauthorized response has a 4xx status code
func (o *PostUsersLoginUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this post users login unauthorized response has a 5xx status code
func (o *PostUsersLoginUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this post users login unauthorized response a status code equal to that given
func (o *PostUsersLoginUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the post users login unauthorized response
func (o *PostUsersLoginUnauthorized) Code() int {
	return 401
}

func (o *PostUsersLoginUnauthorized) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /users/login][%d] postUsersLoginUnauthorized %s", 401, payload)
}

func (o *PostUsersLoginUnauthorized) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /users/login][%d] postUsersLoginUnauthorized %s", 401, payload)
}

func (o *PostUsersLoginUnauthorized) GetPayload() *models.CommonErrorResponse {
	return o.Payload
}

func (o *PostUsersLoginUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.CommonErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
