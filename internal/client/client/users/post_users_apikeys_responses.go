// Code generated by go-swagger; DO NOT EDIT.

package users

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/marmotdata/terraform-provider-marmot/internal/client/models"
)

// PostUsersApikeysReader is a Reader for the PostUsersApikeys structure.
type PostUsersApikeysReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostUsersApikeysReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPostUsersApikeysOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPostUsersApikeysBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /users/apikeys] PostUsersApikeys", response, response.Code())
	}
}

// NewPostUsersApikeysOK creates a PostUsersApikeysOK with default headers values
func NewPostUsersApikeysOK() *PostUsersApikeysOK {
	return &PostUsersApikeysOK{}
}

/*
PostUsersApikeysOK describes a response with status code 200, with default header values.

OK
*/
type PostUsersApikeysOK struct {
	Payload *models.UserAPIKey
}

// IsSuccess returns true when this post users apikeys o k response has a 2xx status code
func (o *PostUsersApikeysOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this post users apikeys o k response has a 3xx status code
func (o *PostUsersApikeysOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post users apikeys o k response has a 4xx status code
func (o *PostUsersApikeysOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this post users apikeys o k response has a 5xx status code
func (o *PostUsersApikeysOK) IsServerError() bool {
	return false
}

// IsCode returns true when this post users apikeys o k response a status code equal to that given
func (o *PostUsersApikeysOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the post users apikeys o k response
func (o *PostUsersApikeysOK) Code() int {
	return 200
}

func (o *PostUsersApikeysOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /users/apikeys][%d] postUsersApikeysOK %s", 200, payload)
}

func (o *PostUsersApikeysOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /users/apikeys][%d] postUsersApikeysOK %s", 200, payload)
}

func (o *PostUsersApikeysOK) GetPayload() *models.UserAPIKey {
	return o.Payload
}

func (o *PostUsersApikeysOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.UserAPIKey)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostUsersApikeysBadRequest creates a PostUsersApikeysBadRequest with default headers values
func NewPostUsersApikeysBadRequest() *PostUsersApikeysBadRequest {
	return &PostUsersApikeysBadRequest{}
}

/*
PostUsersApikeysBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type PostUsersApikeysBadRequest struct {
	Payload *models.CommonErrorResponse
}

// IsSuccess returns true when this post users apikeys bad request response has a 2xx status code
func (o *PostUsersApikeysBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post users apikeys bad request response has a 3xx status code
func (o *PostUsersApikeysBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post users apikeys bad request response has a 4xx status code
func (o *PostUsersApikeysBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this post users apikeys bad request response has a 5xx status code
func (o *PostUsersApikeysBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this post users apikeys bad request response a status code equal to that given
func (o *PostUsersApikeysBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the post users apikeys bad request response
func (o *PostUsersApikeysBadRequest) Code() int {
	return 400
}

func (o *PostUsersApikeysBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /users/apikeys][%d] postUsersApikeysBadRequest %s", 400, payload)
}

func (o *PostUsersApikeysBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /users/apikeys][%d] postUsersApikeysBadRequest %s", 400, payload)
}

func (o *PostUsersApikeysBadRequest) GetPayload() *models.CommonErrorResponse {
	return o.Payload
}

func (o *PostUsersApikeysBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.CommonErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
