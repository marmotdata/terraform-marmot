// Code generated by go-swagger; DO NOT EDIT.

package lineage

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/marmotdata/terraform-provider-marmot/internal/client/models"
)

// PostLineageBatchReader is a Reader for the PostLineageBatch structure.
type PostLineageBatchReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostLineageBatchReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPostLineageBatchOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPostLineageBatchBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /lineage/batch] PostLineageBatch", response, response.Code())
	}
}

// NewPostLineageBatchOK creates a PostLineageBatchOK with default headers values
func NewPostLineageBatchOK() *PostLineageBatchOK {
	return &PostLineageBatchOK{}
}

/*
PostLineageBatchOK describes a response with status code 200, with default header values.

OK
*/
type PostLineageBatchOK struct {
	Payload []*models.LineageBatchLineageResult
}

// IsSuccess returns true when this post lineage batch o k response has a 2xx status code
func (o *PostLineageBatchOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this post lineage batch o k response has a 3xx status code
func (o *PostLineageBatchOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post lineage batch o k response has a 4xx status code
func (o *PostLineageBatchOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this post lineage batch o k response has a 5xx status code
func (o *PostLineageBatchOK) IsServerError() bool {
	return false
}

// IsCode returns true when this post lineage batch o k response a status code equal to that given
func (o *PostLineageBatchOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the post lineage batch o k response
func (o *PostLineageBatchOK) Code() int {
	return 200
}

func (o *PostLineageBatchOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /lineage/batch][%d] postLineageBatchOK %s", 200, payload)
}

func (o *PostLineageBatchOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /lineage/batch][%d] postLineageBatchOK %s", 200, payload)
}

func (o *PostLineageBatchOK) GetPayload() []*models.LineageBatchLineageResult {
	return o.Payload
}

func (o *PostLineageBatchOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostLineageBatchBadRequest creates a PostLineageBatchBadRequest with default headers values
func NewPostLineageBatchBadRequest() *PostLineageBatchBadRequest {
	return &PostLineageBatchBadRequest{}
}

/*
PostLineageBatchBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type PostLineageBatchBadRequest struct {
	Payload *models.CommonErrorResponse
}

// IsSuccess returns true when this post lineage batch bad request response has a 2xx status code
func (o *PostLineageBatchBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post lineage batch bad request response has a 3xx status code
func (o *PostLineageBatchBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post lineage batch bad request response has a 4xx status code
func (o *PostLineageBatchBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this post lineage batch bad request response has a 5xx status code
func (o *PostLineageBatchBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this post lineage batch bad request response a status code equal to that given
func (o *PostLineageBatchBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the post lineage batch bad request response
func (o *PostLineageBatchBadRequest) Code() int {
	return 400
}

func (o *PostLineageBatchBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /lineage/batch][%d] postLineageBatchBadRequest %s", 400, payload)
}

func (o *PostLineageBatchBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /lineage/batch][%d] postLineageBatchBadRequest %s", 400, payload)
}

func (o *PostLineageBatchBadRequest) GetPayload() *models.CommonErrorResponse {
	return o.Payload
}

func (o *PostLineageBatchBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.CommonErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
