// Code generated by go-swagger; DO NOT EDIT.

package lineage

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// NewGetLineageAssetsIDParams creates a new GetLineageAssetsIDParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewGetLineageAssetsIDParams() *GetLineageAssetsIDParams {
	return &GetLineageAssetsIDParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewGetLineageAssetsIDParamsWithTimeout creates a new GetLineageAssetsIDParams object
// with the ability to set a timeout on a request.
func NewGetLineageAssetsIDParamsWithTimeout(timeout time.Duration) *GetLineageAssetsIDParams {
	return &GetLineageAssetsIDParams{
		timeout: timeout,
	}
}

// NewGetLineageAssetsIDParamsWithContext creates a new GetLineageAssetsIDParams object
// with the ability to set a context for a request.
func NewGetLineageAssetsIDParamsWithContext(ctx context.Context) *GetLineageAssetsIDParams {
	return &GetLineageAssetsIDParams{
		Context: ctx,
	}
}

// NewGetLineageAssetsIDParamsWithHTTPClient creates a new GetLineageAssetsIDParams object
// with the ability to set a custom HTTPClient for a request.
func NewGetLineageAssetsIDParamsWithHTTPClient(client *http.Client) *GetLineageAssetsIDParams {
	return &GetLineageAssetsIDParams{
		HTTPClient: client,
	}
}

/*
GetLineageAssetsIDParams contains all the parameters to send to the API endpoint

	for the get lineage assets ID operation.

	Typically these are written to a http.Request.
*/
type GetLineageAssetsIDParams struct {

	/* Direction.

	   Direction of lineage (upstream, downstream, or both)

	   Default: "both"
	*/
	Direction *string

	/* ID.

	   Asset ID

	   Format: uuid
	*/
	ID strfmt.UUID

	/* Limit.

	   Maximum depth of lineage graph

	   Default: 10
	*/
	Limit *int64

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the get lineage assets ID params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetLineageAssetsIDParams) WithDefaults() *GetLineageAssetsIDParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the get lineage assets ID params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetLineageAssetsIDParams) SetDefaults() {
	var (
		directionDefault = string("both")

		limitDefault = int64(10)
	)

	val := GetLineageAssetsIDParams{
		Direction: &directionDefault,
		Limit:     &limitDefault,
	}

	val.timeout = o.timeout
	val.Context = o.Context
	val.HTTPClient = o.HTTPClient
	*o = val
}

// WithTimeout adds the timeout to the get lineage assets ID params
func (o *GetLineageAssetsIDParams) WithTimeout(timeout time.Duration) *GetLineageAssetsIDParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get lineage assets ID params
func (o *GetLineageAssetsIDParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get lineage assets ID params
func (o *GetLineageAssetsIDParams) WithContext(ctx context.Context) *GetLineageAssetsIDParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get lineage assets ID params
func (o *GetLineageAssetsIDParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get lineage assets ID params
func (o *GetLineageAssetsIDParams) WithHTTPClient(client *http.Client) *GetLineageAssetsIDParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get lineage assets ID params
func (o *GetLineageAssetsIDParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithDirection adds the direction to the get lineage assets ID params
func (o *GetLineageAssetsIDParams) WithDirection(direction *string) *GetLineageAssetsIDParams {
	o.SetDirection(direction)
	return o
}

// SetDirection adds the direction to the get lineage assets ID params
func (o *GetLineageAssetsIDParams) SetDirection(direction *string) {
	o.Direction = direction
}

// WithID adds the id to the get lineage assets ID params
func (o *GetLineageAssetsIDParams) WithID(id strfmt.UUID) *GetLineageAssetsIDParams {
	o.SetID(id)
	return o
}

// SetID adds the id to the get lineage assets ID params
func (o *GetLineageAssetsIDParams) SetID(id strfmt.UUID) {
	o.ID = id
}

// WithLimit adds the limit to the get lineage assets ID params
func (o *GetLineageAssetsIDParams) WithLimit(limit *int64) *GetLineageAssetsIDParams {
	o.SetLimit(limit)
	return o
}

// SetLimit adds the limit to the get lineage assets ID params
func (o *GetLineageAssetsIDParams) SetLimit(limit *int64) {
	o.Limit = limit
}

// WriteToRequest writes these params to a swagger request
func (o *GetLineageAssetsIDParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.Direction != nil {

		// query param direction
		var qrDirection string

		if o.Direction != nil {
			qrDirection = *o.Direction
		}
		qDirection := qrDirection
		if qDirection != "" {

			if err := r.SetQueryParam("direction", qDirection); err != nil {
				return err
			}
		}
	}

	// path param id
	if err := r.SetPathParam("id", o.ID.String()); err != nil {
		return err
	}

	if o.Limit != nil {

		// query param limit
		var qrLimit int64

		if o.Limit != nil {
			qrLimit = *o.Limit
		}
		qLimit := swag.FormatInt64(qrLimit)
		if qLimit != "" {

			if err := r.SetQueryParam("limit", qLimit); err != nil {
				return err
			}
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
