// Code generated by go-swagger; DO NOT EDIT.

package lineage

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/marmotdata/terraform-provider-marmot/internal/client/models"
)

// DeleteLineageDirectIDReader is a Reader for the DeleteLineageDirectID structure.
type DeleteLineageDirectIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteLineageDirectIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewDeleteLineageDirectIDOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewDeleteLineageDirectIDBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewDeleteLineageDirectIDInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[DELETE /lineage/direct/{id}] DeleteLineageDirectID", response, response.Code())
	}
}

// NewDeleteLineageDirectIDOK creates a DeleteLineageDirectIDOK with default headers values
func NewDeleteLineageDirectIDOK() *DeleteLineageDirectIDOK {
	return &DeleteLineageDirectIDOK{}
}

/*
DeleteLineageDirectIDOK describes a response with status code 200, with default header values.

OK
*/
type DeleteLineageDirectIDOK struct {
}

// IsSuccess returns true when this delete lineage direct Id o k response has a 2xx status code
func (o *DeleteLineageDirectIDOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this delete lineage direct Id o k response has a 3xx status code
func (o *DeleteLineageDirectIDOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete lineage direct Id o k response has a 4xx status code
func (o *DeleteLineageDirectIDOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete lineage direct Id o k response has a 5xx status code
func (o *DeleteLineageDirectIDOK) IsServerError() bool {
	return false
}

// IsCode returns true when this delete lineage direct Id o k response a status code equal to that given
func (o *DeleteLineageDirectIDOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the delete lineage direct Id o k response
func (o *DeleteLineageDirectIDOK) Code() int {
	return 200
}

func (o *DeleteLineageDirectIDOK) Error() string {
	return fmt.Sprintf("[DELETE /lineage/direct/{id}][%d] deleteLineageDirectIdOK", 200)
}

func (o *DeleteLineageDirectIDOK) String() string {
	return fmt.Sprintf("[DELETE /lineage/direct/{id}][%d] deleteLineageDirectIdOK", 200)
}

func (o *DeleteLineageDirectIDOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteLineageDirectIDBadRequest creates a DeleteLineageDirectIDBadRequest with default headers values
func NewDeleteLineageDirectIDBadRequest() *DeleteLineageDirectIDBadRequest {
	return &DeleteLineageDirectIDBadRequest{}
}

/*
DeleteLineageDirectIDBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type DeleteLineageDirectIDBadRequest struct {
	Payload *models.CommonErrorResponse
}

// IsSuccess returns true when this delete lineage direct Id bad request response has a 2xx status code
func (o *DeleteLineageDirectIDBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete lineage direct Id bad request response has a 3xx status code
func (o *DeleteLineageDirectIDBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete lineage direct Id bad request response has a 4xx status code
func (o *DeleteLineageDirectIDBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete lineage direct Id bad request response has a 5xx status code
func (o *DeleteLineageDirectIDBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this delete lineage direct Id bad request response a status code equal to that given
func (o *DeleteLineageDirectIDBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the delete lineage direct Id bad request response
func (o *DeleteLineageDirectIDBadRequest) Code() int {
	return 400
}

func (o *DeleteLineageDirectIDBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /lineage/direct/{id}][%d] deleteLineageDirectIdBadRequest %s", 400, payload)
}

func (o *DeleteLineageDirectIDBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /lineage/direct/{id}][%d] deleteLineageDirectIdBadRequest %s", 400, payload)
}

func (o *DeleteLineageDirectIDBadRequest) GetPayload() *models.CommonErrorResponse {
	return o.Payload
}

func (o *DeleteLineageDirectIDBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.CommonErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteLineageDirectIDInternalServerError creates a DeleteLineageDirectIDInternalServerError with default headers values
func NewDeleteLineageDirectIDInternalServerError() *DeleteLineageDirectIDInternalServerError {
	return &DeleteLineageDirectIDInternalServerError{}
}

/*
DeleteLineageDirectIDInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type DeleteLineageDirectIDInternalServerError struct {
	Payload *models.CommonErrorResponse
}

// IsSuccess returns true when this delete lineage direct Id internal server error response has a 2xx status code
func (o *DeleteLineageDirectIDInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete lineage direct Id internal server error response has a 3xx status code
func (o *DeleteLineageDirectIDInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete lineage direct Id internal server error response has a 4xx status code
func (o *DeleteLineageDirectIDInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete lineage direct Id internal server error response has a 5xx status code
func (o *DeleteLineageDirectIDInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this delete lineage direct Id internal server error response a status code equal to that given
func (o *DeleteLineageDirectIDInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the delete lineage direct Id internal server error response
func (o *DeleteLineageDirectIDInternalServerError) Code() int {
	return 500
}

func (o *DeleteLineageDirectIDInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /lineage/direct/{id}][%d] deleteLineageDirectIdInternalServerError %s", 500, payload)
}

func (o *DeleteLineageDirectIDInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /lineage/direct/{id}][%d] deleteLineageDirectIdInternalServerError %s", 500, payload)
}

func (o *DeleteLineageDirectIDInternalServerError) GetPayload() *models.CommonErrorResponse {
	return o.Payload
}

func (o *DeleteLineageDirectIDInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.CommonErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
